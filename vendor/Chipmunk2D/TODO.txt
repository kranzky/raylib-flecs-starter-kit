Priorities:
	Basics tutorial.
	Simple top down player controls.
	* test tiny omega bug in cpvslerp().
	User definable default winding.
	User definable fast collision filtering.
	Assertion (or warning?) for destroying a body with things still attached
	Bilinearly sampled image sampler function. (override the sample method to always take bilinear samples)
	RGB Image Sampler class.
	Reorganize Chimpnuk Pro directory structure. Too flat and confusing.
	Improve the ACD splitting plane algorithm.
	Fishing game
	Motorcycle in a spinning cage
	Squid thingy like TomorrowPlusX.

	Investigate getting better PhysicsEditor support.

Unordered
	Fix solver issues with the groove joint.
	Use a slop tolerance on joint boundaries.

Website things
	Don't make any mistakes: http://www.gamasutra.com/view/feature/185773/the_top_10_mistakes_tool_.php
	Several people want a Chipmunk Facebook page.
	figure out and redo front page.	Chipmunk js examples.

Future things to think about:
	breakable object support functions?
	Serialization
	Tests for the query methods
	Building bodies from shape collections.
	Per body iterations and timestep?
	Per body damping and gravity coefs?
	Easy callback programable joint?
	Top down racing game. (Need the callback constraint)
	cpBodyActivateStatic() should also activate joints?

Chipmunk 7:
	Speculative contacts
	User definable constraint
	Custom contact constraint with rolling friction and per contact surface v.
	Serialization
	API changes, different body/shape instantiation.
	Collision handler objects with additional callbacks.
	Calculate contact anchors to get rid of contact pos. (needed for speculative contacts anyway)
	Mass property calculation changes.
	Change apply force/impulse and point velocity functions.
	Separate doxygen docs for Objective-C parts and C parts.
	Cocos2D xcode templates.
	Custom contacts using cpArbiter user data.
	Built in transform type.
	